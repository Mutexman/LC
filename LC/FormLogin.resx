<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAAAAAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABIAAAAAAAAAAAAAAAEAAAAA
        AAD///8A4ODgAAAAAADw8PAA+Pj4AOjo6AAQECAAKChAACAgQADY2OAAMDBAACgoOAAYGCgA4ODoAODg
        8AAgIDAA2NDYANDQ4ACgoKAA2NjYANDQ2ADQ0NAAcIC4ACgoSABwgLAA8PD/APj4/wAYGDAAICA4ANjQ
        0ADg4PgAyMjQAICQwAAwOFgAMDBQANDIyADAwMgA4NjYALi4uADo6PAA4OD/ALCwsADQ0PAA4ODYAKio
        qADo6P8AYHCgAODQ0ADY2OgAYHCwAFhosAA4OFgA0NDoALCoqADQyNAAcIDAAEBAYAC4uMAAYHCoAMDA
        wACooKAAwMDQAFBgkAAQECgAmJiYAPDw+ABoeKgAeIjAAGh4sAB4iLgAaHCoADg4SAAwMEgAyMDIAFho
        kABwiLgAeIiwAGBgkABAUHgAQEBQAMjIyACgoLAAODhQAEhQcADAwLgAuLCwAKCgqADg0NgAqKi4AFho
        qABogLgAaHi4AEBQgABQYKAAQEBoACgoUAAoMFAAKDBAAJiYoACQkJgAiIiQAEBAWAAwOEgAMDhQAEBI
        aADIyOAA2NDgAHiQwABwiLAAWGigAGBomACAkLAAaHCgADg4aABYWHgAOEBgACgwWAB4eIgAWFhwAJCQ
        oAA4QFAAuLjIAFBQcACwsMAAsKiwANjY8ACoqLAA6Oj4ALCwuABgaLAAkKC4AFBgsABYaJgAYGioAGB4
        qABogLAAcHCwAFBgiAA4UGgAOEh4AFBQgABwgKgAcHioAHB4oABYWIAAUFB4AICAkADQwMAAgHiIADBA
        UACIiJgAkJCQAFBggAA4QFgAQFBwAODg0ACwsKgAyMDAAHBwcAB4eIAA2NDIAGBwmADAwOAAWHCwAGCA
        sAB4gLAAiJC4AGBwuABwkLgAcIjAAHh4qABweLAASFB4ADA4aABYYJgAQEiAAFhoiABQWIAAcHCgACg4
        WACAkKgAaHiYAHCAoAA4SHAAcHCIAFBQaABYUGAAQEhgADAoQAAoMEgA4NjgAMC4uACYkJgAgHCAACAo
        OABgYIAASFBoAGhwiAC4sLgAOEhgADhIaAAwQGAASFBgALi4sADw8OgAyMjYAMjIwADIyOgAYHCQAHh4
        eADAuNAAgIiYAHB4uACQoMgAgJC4AFBgmABgeLAAaIDAAGBooABQYKgAwLiwAEBIeABQWIgAODhgAGh4
        oACAiKgAaHCYAGhomAAwOGAAYGiIAPj48ABocJAAIChQAFBQYAAgKEAAYGBwALCgoABgYHgAmKC4AJCI
        kABIWHgAqKigADBAWADAuMAAuLDAANDQyADQwMgA2Nj4AODY0ACIiIgA2MjIALCwyAC4uKgAwLjIANDI
        wADAsNAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUFCQkFAwMCAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwEBAQErAQEBBQRVEhISEjkCAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAQMDBQEFBQEDAQADKyNk0ZISxgICAgIC
        AgICAgICfhUUOwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhBBBQMFAQUBBQQFAAUEKZ6enxIs
        AgICAgICAgkBCRUBAREUJPwCAgICAgICAgICAgICAgICAgICAgICAgICAgL+AQQDBAEBAQEBAQEBBSXr
        np6flxI8NQICEQEFAQUEGeYEDQEJExAfAgICAgICAgICAgICAgICAgICAgICAgICEg0EBQEBJQklE/gT
        EBMQWGIpnp+SQEA8VRUFBAQEBAAEBBkFBAEJkx8CAgICAgICAgICAgICAgICAgICAgICAn4FBcwBmy8V
        oKA2HTlJSRUVFRTzQJ+XlzUBBAQFAAAAAwAaGg0ZBfs5AgICAgICAgICAgICAgICAgICAgICAmMBBQMB
        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
        CgoLZyIhIWXDtrXlclM4IQgHGxz5ASUQAgICAgICAgICAgICBOYBK1eeBw8bB19fc1O4kneUUhcICGUS
        nPG6CwoKCggXOCK7srjFkbm7IRcICBsckgETNgICAgICAgICAgICAgIBQMiVPxwIDBwK6GBocsGWEroH
        CGZ4Eiks+QsHCgeVBxdPdufFcsTHdCIHCAcMDJIFExUJAgICAgICAgICAgICAmUHDAcHBwccCL1gdJnr
        lO/BTwcIB56ektFHBwcHCL1IZe3tcsQzIhcXBwgPGwtRAxFQCQICAgICAgICAgICAgICCAgHBwoLDAwb
        Cl90M3bDlLoKCwcXUhdHBxwKCAgXUrl2uXNHF0gHBw8KCAwKzSgDJBMCAgICAgICAgICAgICAsoICAgI
        DwcKHAcHSCIiZbpyZUcLCgscCAcICAoHSMq66TMHBwcHCgcIHAzpWB4NDs0lAgICAgICAgICAgICAgJi
        FxsPBxwHCgcHGw8cwgq9M7t4ZrwLvAsHvBwKT3i7UhdhBwcHBxvqG7p1NC1/Hh4TFAICAgICAgICAgIC
        AgIFAzgHDwYKCAoHCwoHBhsMCAsICAgIDw8PDw8KCpVhHAhhCAgKCA8IBmEqDg0oHgABFBQCAgICAgIC
        AgICAgIEBAXrCBsLDAsPDwsPCw8PCwcPDwccBwgHCAgIBwcIB+oHBw8HCAwbBgySDg4eLUEnDhQUAgIC
        AgICAgICAgIAAAQFkwgHPxsGDA8LDAsLCgoKDAsMDwgIB2EHCAcbCggICgsIDA8MZQxPHx4OBB4tGgEU
        FAICAgICAgICAgMEAAMABSuUFwo/PwYGBgYMBgsLCw8LDwcLCgoMHAoHBxwLChwcBgYG6b4kCQ0oJy0a
        JxUBJAICAgICAgICAgEQOwUABQS+I3YICA8PBgYGBgYMDA8MBsILCgoPBwsbCwwMGz8bBgYGwkkwETAO
        QUEZGXwSAgICAgICAgICAgIBCRVUAwAFAS8sFwoIDBsGBgYGBgYGBgYMDAwMDAwMDAwGBgYGBgYGBp8U
        PRUwBAVBGhMSAgICAgICAgICAgICBQE29BMEJwEdVBJlSAccHAYMBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        DGHA7lY8MBMJBQW/fAICAgICAgICAgICAgIDCR0NBAMFEFQ8wVIiBxwcGwYGBgYGBgYGBgYGBgYGBgYG
        BgYMD2XtYpJA+R88Y1bsewICAgICAgICAgICAgICAgEBAQANAQEknBLDZ2CVwggMDwwGGz8GBgYGBj8G
        Bj8/DBsIC2N3Y+6fwZRkElFVky8CAgICAgICAgICAgICAgIFBQUZQQ4JFTUsxcRo8plIYQcIGwwPBg8P
        BhsbGxscBwgcIndWllE572QsEnwkFQkFAgICAgICAgICAgICAgICBQEOBS0NAREVJjxjY9NTx8lSCgoL
        DAgIDAgICAcIBwcIeBIsYhIpH2Ise/QjEQEeAgICAgICAgICAgICAgICAgIBCS0DKA0wER95JiZVH5bw
        x3hmBwcLCwcLCwoXSBciZWQ1EinLnRQmxhATAQEEAgICAgICAgICAgICAgICAgICNDR9Dh4ODjQ0ERQf
        IyRUWO3KyGcKZmcK8mczMyLyepfxNVVUHx0TEBQJBQQCAgICAgICAgICAgICAgICAgICAh4VfQ4oDR4N
        HgEBEREvFT3LWMXKmmjJyZk4ipg8+zU1nHvOHS8RKxEJAQQCAgICAgICAgICAgICAgICAgICAgICDSp9
        HigoKCcnHgMFARAj9DVWEkASLFUCAgE2VJw1OfMjExAJATAlEAECAgICAgICAgICAgICAgICAgICAgIC
        AhkBNPcNKBp/GgR/BAEBETY1PBISPCYCAgICI50mVPUdECsBASsTAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICKM0qDSgoAxkAAwIDAwEUH5w1WHwCAgICAgUJFRElEwEBAZsBAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgIkaTANDhlBGQICAgICARMkNgUBAgICAgICBSsrAQHMAQH4CQICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICOTnNEX0FBAICAgICAgIFBQICAgICAgICAgIBBAUDBQEJagICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAn9+LD0TAgICAgICAgICAgICAgICAgICAgICAgIEBQEBEAICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICDQENAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAv///////////////////////4D////////+AAD///////wAAH/w
        /////AAAP4Af///8AAAGAAP///wAAAAAAf///AAAAAAB///4AAAAAAP///gAAAAAA///8AAAAAAD///g
        AAAAAAD//8AAAAAAAP//gAAAAAAA//8AAAAAAAD//gAAAAAAAH/4AAAAAAAAf/gAAAAAAAA/+AAAAAAA
        AD/4AAAAAAAAP/gAAAAAAAA/8AAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD/AAAAAAAAAP8AA
        AAAAAAA/wAAAAAAAAD/AAAAAAAAAP+AAAAAAAAA/8AAAAAAAAH/wAAAAAAAAf/AAAAAAAAB/+AAAAAAA
        AD/8AAAAAAAAP/wAAAAAAAA//gAAAAAAAB//AAAAAAAAH/+AAAAAAAAf/4AAAAAAAB//gAAAAAAAH/8A
        AAAAAAAf/gAAAAAAAB/8AAAAAAAAH/AAAAAAAAA/4AAAAAAAAP/gAAAAAAAB/+AAAAAAAAH/8AAAAAAA
        A//4AAAAAAAD//gAAAAAAAP/+AAAAAAAB//8AAAAAAAP//wAAAAAAD///AAAAAAAf//+AAADAAD///4A
        AAeAB////wAgD4AP////gHwPwA////+A/n/gH////4P///g/////x///////////////////
</value>
  </data>
</root>